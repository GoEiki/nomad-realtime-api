{
  "version": 3,
  "sources": ["../../../../vue-window/vue-window.js"],
  "sourcesContent": ["/*!\n * vue-window v1.0.0\n * (c) 2016 mark fluehmann\n * Released under the MIT License.\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    global.VueWindow = factory();\n}(this, function () { 'use strict';\n\n    /* export default for holding the Vue reference */\n    var instance = {};\n\n    /**\n    * Notify constructor\n    * @param {Object} [options]\n    */\n    var WindowSize = (function () {\n        function WindowSize() {\n\n            /* global references */\n\n            /* option defaults */\n            var defaults = {\n            };\n\n            /* extend defaults with given options */\n            this.options = {};\n            if (arguments[0] && typeof arguments[0] === \"object\") {\n                this.options = extendDefaults(defaults, arguments[0]);\n            }\n        }\n\n        /**\n         * Extend defaults with given custom options\n         * @param  object source       WindowSize Object defaults\n         * @param  object properties   custom options\n         * @return object              combined new defaults\n         */\n        function extendDefaults(source, properties) {\n            for (var property in properties) {\n                if (properties.hasOwnProperty(property)) {\n                    source[property] = properties[property];\n                }\n            }\n            return source;\n        }\n\n        return WindowSize;\n\n    })();\n\n    function applyOverride (Vue) {\n        var _util = Vue.util;\n\n        /* override Vue's init */\n        var init = Vue.prototype._init;\n        Vue.prototype._init = function (options) {\n             init.call(this, options);\n        };\n\n        /* override Vue's destroy process */\n        var destroy = Vue.prototype._destroy;\n        Vue.prototype._destroy = function () {\n            destroy.apply(this, arguments);\n        };\n    };\n\n    function registerMixins(Vue) {\n        Vue.mixin({\n            data: function() {\n                return {\n                    window: {\n                        viewport: {\n                            height: 0,\n                            width: 0,\n                        },\n                        page: {\n                            height: 0,\n                            width: 0,           \n                        }\n                    }\n                }\n            },\n            ready: function() {\n                window.addEventListener(\"load\", this.getViewportSize);\n                window.addEventListener(\"resize\", this.getViewportSize);\n            },\n            methods: {\n                getViewportSize: function () {\n                    var body = document.querySelector(\"body\");\n                    var page = document.querySelector(\".content\")\n                    this.window.viewport.height = body.clientHeight;                \n                    this.window.viewport.width =  body.clientWidth;             \n                    this.window.page.height = page.clientHeight;\n                    this.window.page.width = page.clientWidth;\n                }\n            }\n        });\n    };\n\n    /* Installation */\n    WindowSize.installed = false;\n    WindowSize.install = function (Vue) {\n        var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n        if (WindowSize.installed) {\n          warn('already installed.');\n          return;\n        }\n\n        //applyOverride(Vue);\n        registerMixins(Vue);\n \n        instance.Vue = Vue;\n        WindowSize.installed = true;\n    };\n\n    /* set plugin version */\n    WindowSize.version = '1.0.0';\n\n    /* auto install */\n    if (typeof window !== 'undefined' && window.Vue) {\n        window.Vue.use(WindowSize);\n    }\n\n    return WindowSize;\n\n}));"],
  "mappings": ";;;;;AAAA;AAAA;AAKA,KAAC,SAAU,QAAQ,SAAS;AACxB,aAAO,YAAY,YAAY,OAAO,WAAW,cAAc,OAAO,UAAU,QAAQ,IACxF,OAAO,WAAW,cAAc,OAAO,MAAM,OAAO,OAAO,IAC3D,OAAO,YAAY,QAAQ;AAAA,IAC/B,GAAE,SAAM,WAAY;AAAE;AAGlB,UAAI,WAAW,CAAC;AAMhB,UAAI,aAAc,2BAAY;AAC1B,iBAASA,cAAa;AAKlB,cAAI,WAAW,CACf;AAGA,eAAK,UAAU,CAAC;AAChB,cAAI,UAAU,CAAC,KAAK,OAAO,UAAU,CAAC,MAAM,UAAU;AAClD,iBAAK,UAAU,eAAe,UAAU,UAAU,CAAC,CAAC;AAAA,UACxD;AAAA,QACJ;AAQA,iBAAS,eAAe,QAAQ,YAAY;AACxC,mBAAS,YAAY,YAAY;AAC7B,gBAAI,WAAW,eAAe,QAAQ,GAAG;AACrC,qBAAO,QAAQ,IAAI,WAAW,QAAQ;AAAA,YAC1C;AAAA,UACJ;AACA,iBAAO;AAAA,QACX;AAEA,eAAOA;AAAA,MAEX,EAAG;AAEH,eAAS,cAAe,KAAK;AACzB,YAAI,QAAQ,IAAI;AAGhB,YAAI,OAAO,IAAI,UAAU;AACzB,YAAI,UAAU,QAAQ,SAAU,SAAS;AACpC,eAAK,KAAK,MAAM,OAAO;AAAA,QAC5B;AAGA,YAAI,UAAU,IAAI,UAAU;AAC5B,YAAI,UAAU,WAAW,WAAY;AACjC,kBAAQ,MAAM,MAAM,SAAS;AAAA,QACjC;AAAA,MACJ;AAAC;AAED,eAAS,eAAe,KAAK;AACzB,YAAI,MAAM;AAAA,UACN,MAAM,WAAW;AACb,mBAAO;AAAA,cACH,QAAQ;AAAA,gBACJ,UAAU;AAAA,kBACN,QAAQ;AAAA,kBACR,OAAO;AAAA,gBACX;AAAA,gBACA,MAAM;AAAA,kBACF,QAAQ;AAAA,kBACR,OAAO;AAAA,gBACX;AAAA,cACJ;AAAA,YACJ;AAAA,UACJ;AAAA,UACA,OAAO,WAAW;AACd,mBAAO,iBAAiB,QAAQ,KAAK,eAAe;AACpD,mBAAO,iBAAiB,UAAU,KAAK,eAAe;AAAA,UAC1D;AAAA,UACA,SAAS;AAAA,YACL,iBAAiB,WAAY;AACzB,kBAAI,OAAO,SAAS,cAAc,MAAM;AACxC,kBAAI,OAAO,SAAS,cAAc,UAAU;AAC5C,mBAAK,OAAO,SAAS,SAAS,KAAK;AACnC,mBAAK,OAAO,SAAS,QAAS,KAAK;AACnC,mBAAK,OAAO,KAAK,SAAS,KAAK;AAC/B,mBAAK,OAAO,KAAK,QAAQ,KAAK;AAAA,YAClC;AAAA,UACJ;AAAA,QACJ,CAAC;AAAA,MACL;AAAC;AAGD,iBAAW,YAAY;AACvB,iBAAW,UAAU,SAAU,KAAK;AAChC,YAAI,UAAU,UAAU,UAAU,KAAK,UAAU,CAAC,MAAM,SAAY,CAAC,IAAI,UAAU,CAAC;AAEpF,YAAI,WAAW,WAAW;AACxB,eAAK,oBAAoB;AACzB;AAAA,QACF;AAGA,uBAAe,GAAG;AAElB,iBAAS,MAAM;AACf,mBAAW,YAAY;AAAA,MAC3B;AAGA,iBAAW,UAAU;AAGrB,UAAI,OAAO,WAAW,eAAe,OAAO,KAAK;AAC7C,eAAO,IAAI,IAAI,UAAU;AAAA,MAC7B;AAEA,aAAO;AAAA,IAEX,CAAC;AAAA;AAAA;",
  "names": ["WindowSize"]
}
