import {
  __commonJS
} from "./chunk-BUSYA2B4.js";

// node_modules/vue-window/vue-window.js
var require_vue_window = __commonJS({
  "node_modules/vue-window/vue-window.js"(exports, module) {
    (function(global, factory) {
      typeof exports === "object" && typeof module !== "undefined" ? module.exports = factory() : typeof define === "function" && define.amd ? define(factory) : global.VueWindow = factory();
    })(exports, function() {
      "use strict";
      var instance = {};
      var WindowSize = /* @__PURE__ */ function() {
        function WindowSize2() {
          var defaults = {};
          this.options = {};
          if (arguments[0] && typeof arguments[0] === "object") {
            this.options = extendDefaults(defaults, arguments[0]);
          }
        }
        function extendDefaults(source, properties) {
          for (var property in properties) {
            if (properties.hasOwnProperty(property)) {
              source[property] = properties[property];
            }
          }
          return source;
        }
        return WindowSize2;
      }();
      function applyOverride(Vue) {
        var _util = Vue.util;
        var init = Vue.prototype._init;
        Vue.prototype._init = function(options) {
          init.call(this, options);
        };
        var destroy = Vue.prototype._destroy;
        Vue.prototype._destroy = function() {
          destroy.apply(this, arguments);
        };
      }
      ;
      function registerMixins(Vue) {
        Vue.mixin({
          data: function() {
            return {
              window: {
                viewport: {
                  height: 0,
                  width: 0
                },
                page: {
                  height: 0,
                  width: 0
                }
              }
            };
          },
          ready: function() {
            window.addEventListener("load", this.getViewportSize);
            window.addEventListener("resize", this.getViewportSize);
          },
          methods: {
            getViewportSize: function() {
              var body = document.querySelector("body");
              var page = document.querySelector(".content");
              this.window.viewport.height = body.clientHeight;
              this.window.viewport.width = body.clientWidth;
              this.window.page.height = page.clientHeight;
              this.window.page.width = page.clientWidth;
            }
          }
        });
      }
      ;
      WindowSize.installed = false;
      WindowSize.install = function(Vue) {
        var options = arguments.length <= 1 || arguments[1] === void 0 ? {} : arguments[1];
        if (WindowSize.installed) {
          warn("already installed.");
          return;
        }
        registerMixins(Vue);
        instance.Vue = Vue;
        WindowSize.installed = true;
      };
      WindowSize.version = "1.0.0";
      if (typeof window !== "undefined" && window.Vue) {
        window.Vue.use(WindowSize);
      }
      return WindowSize;
    });
  }
});
export default require_vue_window();
/*! Bundled license information:

vue-window/vue-window.js:
  (*!
   * vue-window v1.0.0
   * (c) 2016 mark fluehmann
   * Released under the MIT License.
   *)
*/
//# sourceMappingURL=vue-window.js.map
